.root {
  display: flex;
  width: 100%;
  flex-direction: column;
  justify-content: center;
  flex: 1;
  overflow: hidden;
  transition: background $transitionTimeMs;
}

.DEBUG,
.finishedComplete,
.overButtons,
.active,
.finished,
.answered {
  /*!KEEP*/
}

.overContent {
  // Texts container
  margin: 0;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1em;
  a {
    color: $videoRedColor;
    transition: opacity $transitionTimeMs;
    opacity: 1;
    text-decoration: none;
    &:hover {
      opacity: 0.8;
      text-decoration: underline;
    }
  }
}

.video {
  outline: unset;
  border: none;
  clip-path: inset(0px);
  object-fit: contain;
  transition: opacity $transitionTimeMs;
  opacity: 1;
  .videoComplete & {
    opacity: 0.8;
  }
  max-width: 100%;
  max-height: 100%;
}

.curtain,
.overContainer {
  position: absolute;
  overflow: hidden;

  display: flex;
  align-items: stretch;
  flex-direction: column;
  flex: 1;
  justify-content: center;

  left: 0;
  right: 0;
  top: 0;
  bottom: 0;

  transition:
    all $transitionTimeMs,
    opacity $effectTimeMs,
    background $effectTimeMs;

  pointer-events: none;
  opacity: 0;

  .DEBUG &,
  .videoComplete & {
    opacity: 1;
    pointer-events: all;
    // background-color: color.change($videoBgColor, $alpha: 0.5);
  }
}

.overBox {
  position: relative;
  display: flex;
  gap: 1em;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  .DEBUG & {
    border: 2px dashed red; // DEBUG
  }
}

.startScreen {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 1;
  transition: all $transitionTimeMs;
  background-color: color.change($videoBlueColor, $alpha: 0.5);
  align-items: center;
  justify-content: center;
  .startButton {
    cursor: pointer;
    padding: 2vw;
    background-color: #000; // color.change(#000, $alpha: 0.7);
    border-radius: 50%;
    transition: all $transitionTimeMs;
    opacity: 0.8;
    &:hover {
      opacity: 1;
      transform: scale(1.1);
    }
    svg {
      color: #fff;
      $size: 10vw;
      width: $size;
      height: $size;
    }
  }
  &:hover {
    background-color: color.change($videoBlueColor, $alpha: 0.3);
    .startButton {
      // opacity: 1;
    }
  }
  &.started {
    opacity: 0;
    pointer-events: none;
  }
}

.curtain {
  background-color: $videoBgColor;
  opacity: 1;
  pointer-events: all;
  .active & {
    opacity: 0;
    pointer-events: none;
  }
}

.overButtons {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  // display: flex;
  // gap: 2vw;
  // flex-direction: column;
  // justify-content: center;
  // align-items: stretch;
}

$buttonBorderWidth: 1vw;
$buttonHoverFilters: brightness(110%) contrast(110%);
$buttonBlurFilters: blur(0.2vw);
$textShadowSize: 0.2vw;

.answerButton {
  &:global(.MuiButtonBase-root) {
    overflow: hidden;
    position: absolute;
    border-style: dashed;
    border-radius: 2vw;
    border-width: 0.7vw;
    border-color: transparent; // color.change(white, $alpha: 0.8);
    transition: all $transitionTimeMs;
    font-size: 75%;
    $bgColor: $videoBlueColor;
    background-color: transparent; // $bgColor;
    opacity: 0.8;
    pointer-events: none;
    .videoComplete:not(.answered) & {
      pointer-events: all;
    }
    .DEBUG &:global(.MuiButtonBase-root), // DEBUG: Show all frames
    &:hover {
      border-style: dashed;
      border-color: color.change($videoBlueColor, $alpha: 0.5);
    }
    &:hover,
    &.selected {
      .videoEffectComplete & {
        backdrop-filter: $buttonHoverFilters;
      }
      opacity: 1;
    }
    &.correct {
      border-style: dashed;
      border-color: color.change($successColor, $alpha: 1);
      backdrop-filter: $buttonHoverFilters;
    }
    &.selected {
      border-style: solid;
      border-color: color.change($videoBlueColor, $alpha: 1);
    }
    .hasCorrectAnswer &.selected.correct {
      border-style: solid;
      border-color: color.change($successColor, $alpha: 1);
    }
    .hasCorrectAnswer .videoComplete.answered & {
      &:not(.correct) {
        background-color: color.change(#f00, $alpha: 0.4);
      }
    }
    &:active {
      &:hover {
        backdrop-filter: $buttonHoverFilters; // $buttonBlurFilters;
      }
    }
  }
}

$textShadowSize: 0.4vmin;

.finalImage {
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.showTexts {
  gap: 1em;
}

// Markdown content
.showQuestion,
.showQuote,
.showComment {
  color: #fff;
  p {
    margin: 0.3em 0;
  }
  em {
    opacity: 0.5;
  }
}

.showComment {
  font-size: 80%;
  color: black; // $videoBlueColor;
}
.showQuote {
  $bgColor: color.change(#fff, $alpha: 1);
  background-color: $bgColor;
  color: #000;
  padding: 3vmin 4vmin;
  border-radius: 4vmin;
  box-shadow: 0.4vmin 0.4vmin 0 0.3vmin color.change(black, $alpha: 0.3);
  opacity: 0.6;
  position: relative;
  &::before {
    left: -0.9em;
    bottom: 1em;
    border-top: 0.5em solid transparent;
    border-bottom: 0.5em solid transparent;
    border-right: 1em solid $bgColor;
    box-sizing: border-box;
    content: '';
    width: 0;
    height: 0;
    position: absolute;
  }
}

.finalButton {
  &:global(.MuiButtonBase-root) {
    &.nice:before {
      background: linear-gradient(165deg, transparent 0%, color.change(black, $alpha: 0.5) 100%);
    }
    &:before {
      content: '';
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      opacity: 0.5;
      transition: all $transitionTimeMs;
    }
    display: flex;
    gap: 1vw;
    overflow: hidden;
    transition: all $transitionTimeMs;
    background-color: #000;
    color: #fff;
    font-size: 4vw;
    padding: 2vw 4vw;
    border-radius: 10vmin;
    opacity: 0.6;
    &.nice {
      opacity: 0.8;
      $bgColor: $videoBlueColor;
      background-color: $bgColor;
      border-style: solid;
      border-color: color.change(white, $alpha: 0.8);
      color: color.mix(white, $bgColor, 100%);
      box-shadow:
        0.2vw 0.2vw 0 0.3vw color.change(black, $alpha: 0.3),
        inset 0.1vw 0.1vw 0 0.2vw color.change(black, $alpha: 0.2);
    }
    &:hover {
      opacity: 1;
      &:before {
        opacity: 0.3;
      }
    }
    &.nice:active {
      box-shadow: 0.2vw 0.2vw 0 0 color.change(black, $alpha: 0.6);
    }
    &:active {
      &:before {
        opacity: 0.8;
      }
    }
    :global(.MuiSvgIcon-root) {
      font-size: 1em;
    }
  }
}
